<?php

/**
 * BaseReservation
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $client_id
 * @property string $firstname
 * @property string $lastname
 * @property integer $destination_id
 * @property string $uniqid
 * @property string $round_trip
 * @property integer $no_pax
 * @property string $hotel
 * @property timestamp $arrival_date
 * @property string $arrival_flight_no
 * @property timestamp $departure_date
 * @property string $departure_flight_no
 * @property numeric $price
 * @property text $comment
 * @property boolean $deleted
 * @property varchar $status
 * @property timestamp $payment_date
 * @property Client $Client
 * @property Destination $Destination
 * @property Doctrine_Collection $PaypalTransactions
 * 
 * @method integer             get()                    Returns the current record's "client_id" value
 * @method string              get()                    Returns the current record's "firstname" value
 * @method string              get()                    Returns the current record's "lastname" value
 * @method integer             get()                    Returns the current record's "destination_id" value
 * @method string              get()                    Returns the current record's "uniqid" value
 * @method string              get()                    Returns the current record's "round_trip" value
 * @method integer             get()                    Returns the current record's "no_pax" value
 * @method string              get()                    Returns the current record's "hotel" value
 * @method timestamp           get()                    Returns the current record's "arrival_date" value
 * @method string              get()                    Returns the current record's "arrival_flight_no" value
 * @method timestamp           get()                    Returns the current record's "departure_date" value
 * @method string              get()                    Returns the current record's "departure_flight_no" value
 * @method numeric             get()                    Returns the current record's "price" value
 * @method text                get()                    Returns the current record's "comment" value
 * @method boolean             get()                    Returns the current record's "deleted" value
 * @method varchar             get()                    Returns the current record's "status" value
 * @method timestamp           get()                    Returns the current record's "payment_date" value
 * @method Client              get()                    Returns the current record's "Client" value
 * @method Destination         get()                    Returns the current record's "Destination" value
 * @method Doctrine_Collection get()                    Returns the current record's "PaypalTransactions" collection
 * @method Reservation         set()                    Sets the current record's "client_id" value
 * @method Reservation         set()                    Sets the current record's "firstname" value
 * @method Reservation         set()                    Sets the current record's "lastname" value
 * @method Reservation         set()                    Sets the current record's "destination_id" value
 * @method Reservation         set()                    Sets the current record's "uniqid" value
 * @method Reservation         set()                    Sets the current record's "round_trip" value
 * @method Reservation         set()                    Sets the current record's "no_pax" value
 * @method Reservation         set()                    Sets the current record's "hotel" value
 * @method Reservation         set()                    Sets the current record's "arrival_date" value
 * @method Reservation         set()                    Sets the current record's "arrival_flight_no" value
 * @method Reservation         set()                    Sets the current record's "departure_date" value
 * @method Reservation         set()                    Sets the current record's "departure_flight_no" value
 * @method Reservation         set()                    Sets the current record's "price" value
 * @method Reservation         set()                    Sets the current record's "comment" value
 * @method Reservation         set()                    Sets the current record's "deleted" value
 * @method Reservation         set()                    Sets the current record's "status" value
 * @method Reservation         set()                    Sets the current record's "payment_date" value
 * @method Reservation         set()                    Sets the current record's "Client" value
 * @method Reservation         set()                    Sets the current record's "Destination" value
 * @method Reservation         set()                    Sets the current record's "PaypalTransactions" collection
 * 
 * @package    atc
 * @subpackage model
 * @author     Jorgo Miridis <jorgo@miridis.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseReservation extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('reservation');
        $this->hasColumn('client_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('firstname', 'string', 50, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 50,
             ));
        $this->hasColumn('lastname', 'string', 50, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 50,
             ));
        $this->hasColumn('destination_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('uniqid', 'string', 32, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 32,
             ));
        $this->hasColumn('round_trip', 'string', 2, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 2,
             ));
        $this->hasColumn('no_pax', 'integer', 2, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 2,
             ));
        $this->hasColumn('hotel', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('arrival_date', 'timestamp', null, array(
             'type' => 'timestamp',
             'notnull' => true,
             ));
        $this->hasColumn('arrival_flight_no', 'string', 20, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 20,
             ));
        $this->hasColumn('departure_date', 'timestamp', null, array(
             'type' => 'timestamp',
             'notnull' => false,
             ));
        $this->hasColumn('departure_flight_no', 'string', 20, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 20,
             ));
        $this->hasColumn('price', 'numeric', 10, array(
             'type' => 'numeric',
             'size' => 10,
             'scale' => 2,
             'notnull' => true,
             'length' => 10,
             ));
        $this->hasColumn('comment', 'text', null, array(
             'type' => 'text',
             'notnull' => false,
             ));
        $this->hasColumn('deleted', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));
        $this->hasColumn('status', 'varchar', 20, array(
             'type' => 'varchar',
             'notnull' => true,
             'default' => false,
             'length' => 20,
             ));
        $this->hasColumn('payment_date', 'timestamp', null, array(
             'type' => 'timestamp',
             'notnull' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Client', array(
             'local' => 'client_id',
             'foreign' => 'id'));

        $this->hasOne('Destination', array(
             'local' => 'destination_id',
             'foreign' => 'id'));

        $this->hasMany('PaypalTransaction as PaypalTransactions', array(
             'local' => 'id',
             'foreign' => 'parent_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}